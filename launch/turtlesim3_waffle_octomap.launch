<?xml version="1.0" encoding="utf-8"?>

<launch>
  <!-- Start position of waffle robot in scene. -->
  <arg name="x_pos" default="-3.0"/>
  <arg name="y_pos" default="1.0"/>
  <arg name="z_pos" default="0.0"/>

  <!-- Start gazebo server with turtlebot3_house scene. -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name"    value="$(find turtlebot3_gazebo)/worlds/turtlebot3_house.world"/>
    <arg name="paused"        value="false"/>
    <arg name="use_sim_time"  value="true"/>
    <arg name="gui"           value="false"/>
    <arg name="headless"      value="false"/>
    <arg name="debug"         value="false"/>
  </include>

  <!-- Load robot_description param for tf, rviz and gazebo spawn. -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_waffle.urdf.xacro" />

  <!-- Spawn turtlebot into gazebo based on robot_description. -->
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model turtlebot3 -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />

  <!-- Publish turtlebot3 tf's. -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="waffle_state_publisher" />

  <!-- Octomap -->
  <node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
    <!-- resolution in meters per pixel -->
    <param name="resolution" value="0.01" />
    <!-- name of the fixed frame, needs to be "/map" for SLAM -->
    <param name="frame_id" type="string" value="odom" />
    <!-- max range / depth resolution of the kinect in meter -->
    <param name="sensor_model/max_range" value="10.0" />
    <param name="latch" value="false" />
    <!-- max/min height for occupancy map, should be in meters -->
    <param name="pointcloud_max_z" value="500" />
    <param name="pointcloud_min_z" value="0" />
    <!-- topic from where pointcloud2 messages are subscribed -->
    <remap from="cloud_in" to="/camera/depth/points" />
  </node>
  
  <!-- Launch RViz with the demo configuration. -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find example_maps)/rviz/turtlebot3_waffle_octomap.rviz" />

</launch>
